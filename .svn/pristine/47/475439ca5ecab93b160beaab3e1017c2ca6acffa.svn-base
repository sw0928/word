package tts.project.livek.ui.activity;

import android.content.Intent;
import android.support.v4.util.ArrayMap;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.widget.TextView;

import com.chad.library.adapter.base.BaseQuickAdapter;
import com.chad.library.adapter.base.listener.OnItemChildClickListener;
import com.chad.library.adapter.base.listener.OnItemClickListener;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import java.util.ArrayList;
import java.util.List;

import tts.moudle.api.Host;
import tts.moudle.api.bean.BarBean;
import tts.moudle.api.widget.ListViewForScrollView;
import tts.project.livek.R;
import tts.project.livek.bean.AttentionBean;
import tts.project.livek.bean.UserBean;
import tts.project.livek.ui.adapter.MyFansListAdapter;
import tts.project.livek.utils.Constant;
import tts.project.livek.utils.SpSingleInstance;
import tts.project.livek.utils.ToastUtils;


/**
 * Created by lenove on 2016/9/8.
 */
public class MyFansActivity extends BaseActivity implements SwipeRefreshLayout.OnRefreshListener {

    private boolean isguanzhu;

    public static final int DATA=0;
    public static final int GET_DATA=4;
    public static final int GUANZHU=5;
    private UserBean userBean;
    private ListViewForScrollView mListview;
    private MyFansListAdapter adapter;
    private List<AttentionBean> list;
    private RecyclerView mlist;
    private int pagercount;
    private List<AttentionBean> list1;
    private List<AttentionBean> list2;
    public static final int LOAD_MORE_DATA=2;
    public static final int REFRESH_DATA=3;
    private TextView nocontnet;
    private SwipeRefreshLayout swipeRefreshLayout;
    private int currentPage;
    private String user_id;
    private int mpositon;

    @Override
    protected void initView() {
        setContentView(R.layout.attention_activity);
        findAllView();
        initData();
        initAdapter();

    }

    private void initAdapter() {
        adapter = new MyFansListAdapter(R.layout.item_fans_list, new ArrayList<AttentionBean>());
//        adapter.setLoadMoreView(new LoadMoreView() {
//            @Override
//            public int getLayoutId() {
//                return 0;
//            }
//
//            @Override
//            protected int getLoadingViewId() {
//                return 0;
//            }
//
//            @Override
//            protected int getLoadFailViewId() {
//                return 0;
//            }
//
//            @Override
//            protected int getLoadEndViewId() {
//                return 0;
//            }
//        });
        mlist.setAdapter(adapter);
        adapter.setOnLoadMoreListener(new BaseQuickAdapter.RequestLoadMoreListener() {
            @Override
            public void onLoadMoreRequested() {
                currentPage++;
                startRequestData(LOAD_MORE_DATA);
            }
        });
    }
    private void initData() {
        userBean = SpSingleInstance.getSpSingleInstance().getUserBean(this);
        startRequestData(DATA);
        BarBean barBean = new BarBean();
        barBean.setMsg("我的粉丝");
        setTitle(barBean);
    }

    @Override
    public void doIcon() {
        finish();
    }

    @Override
    protected void startRequestData(int index) {
        super.startRequestData(index);
        ArrayMap<String, String> map = new ArrayMap<>();
        switch (index){
            case GET_DATA:
                map.put("uid", userBean.getUser_id());
                map.put("token", userBean.getToken());
                map.put("type", "2");
                getDataWithPost(GET_DATA, Host.hostUrl+"&c=User&a=follow_list",map);
                break;
            case DATA:
                map.put("uid", userBean.getUser_id());
                map.put("token", userBean.getToken());
                map.put("type", "2");
                getDataWithPost(DATA, Host.hostUrl+"&c=User&a=follow_list",map);
                break;
            case LOAD_MORE_DATA:
                map.put("uid", userBean.getUser_id());
                map.put("token", userBean.getToken());
                map.put("page", pagercount+"");
                map.put("type", "2");
                map.put("pagesize", "8");
                getDataWithPost(LOAD_MORE_DATA, Host.hostUrl+"&c=User&a=follow_list",map);
                break;
            case REFRESH_DATA:
                map.put("uid", userBean.getUser_id());
                map.put("token", userBean.getToken());
                map.put("type", "2");
                map.put("pagesize", "8");
                getDataWithPost(REFRESH_DATA, Host.hostUrl+"&c=User&a=follow_list",map);
                break;
            case GUANZHU:
                map.put("uid", userBean.getUser_id());
                map.put("token", userBean.getToken());
                map.put("user_id2", user_id);
//                type	int	Y		1：关注 2：取消关注
                if (isguanzhu){
                    map.put("type","2");
                }else{
                    map.put("type","1");
                }
                getDataWithPost(GUANZHU, Host.hostUrl + "&c=Index&a=follow",map);
                break;
        }
    }

    @Override
    protected void doSuccess(int index, String response) {
        super.doSuccess(index, response);
        swipeRefreshLayout.setRefreshing(false);
        switch (index){
            case DATA:
                 list = new Gson().fromJson(response,new TypeToken<List<AttentionBean>>(){}.getType());
                adapter.setNewData(list);
                if (list.size()==0){
                    nocontnet.setVisibility(View.VISIBLE);
                }else{
                    nocontnet.setVisibility(View.GONE);
                }
                adapter = new MyFansListAdapter(R.layout.item_fans_list, list);
                mlist.setAdapter(adapter);
                break;
            case LOAD_MORE_DATA:
                list1 = new Gson().fromJson(response,new TypeToken<List<AttentionBean>>(){}.getType());
                adapter.addData(list1);
                adapter.notifyDataSetChanged();
                break;
            case REFRESH_DATA:
                list2 = new Gson().fromJson(response,new TypeToken<List<AttentionBean>>(){}.getType());
                adapter.notifyDataSetChanged();
                break;
            case GUANZHU:
                if (isguanzhu){
                    ToastUtils.show(this,"取消关注");
                    list.get(mpositon).setIs_follow(2);
                }else{
                    list.get(mpositon).setIs_follow(1);
                    ToastUtils.show(this,"关注成功");
                }
                adapter.notifyDataSetChanged();
                break;
        }
    }

    private void findAllView() {
        swipeRefreshLayout = (SwipeRefreshLayout) findViewById(R.id.mSwipeRefreshLayout);
        nocontnet = (TextView) findViewById(R.id.no_content);
        mlist = (RecyclerView) findViewById(R.id.mlist);
        mlist.addOnItemTouchListener(new OnItemClickListener() {
            @Override
            public void onSimpleItemClick(BaseQuickAdapter baseQuickAdapter, View view, int i) {
                Intent intent = new Intent(MyFansActivity.this, OthersSpaceActivity.class);
                intent.putExtra(Constant.USER_ID,list.get(i).getUser_id());
                startActivity(intent);
            }
        });
        mlist.addOnItemTouchListener(new OnItemChildClickListener() {

            @Override
            public void onSimpleItemChildClick(BaseQuickAdapter baseQuickAdapter, View view, int i) {
                List<AttentionBean> data = baseQuickAdapter.getData();
                if (view.getId()==R.id.item_fans_guanzhu){
                    mpositon = i;
                    user_id = data.get(i).getUser_id();
                    if (data.get(i).getIs_follow()==1){
                        isguanzhu = true;
                    }else{
                        isguanzhu = false;
                    }
                    startRequestData(GUANZHU);
                }
            }
        });

        mlist.setLayoutManager(new LinearLayoutManager(this));
        swipeRefreshLayout.setOnRefreshListener(this);

    }

    @Override
    public void onRefresh() {
        startRequestData(DATA);
        swipeRefreshLayout.setRefreshing(true);
    }
}
