package tts.project.livek.ui.fragment;


import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v4.util.ArrayMap;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.DiskCacheStrategy;
import com.dou361.customui.ui.AlertView;
import com.google.gson.Gson;

import tts.moudle.api.Host;
import tts.moudle.api.widget.CircleImageView;
import tts.project.livek.R;
import tts.project.livek.bean.UserBean;
import tts.project.livek.bean.UserCenterBean;
import tts.project.livek.ui.activity.AttentionActivity;
import tts.project.livek.ui.activity.ChargeActivity;
import tts.project.livek.ui.activity.LoginActivity2;
import tts.project.livek.ui.activity.MainActivity;
import tts.project.livek.ui.activity.MyFansActivity;
import tts.project.livek.ui.activity.MyVideoActivity;
import tts.project.livek.ui.activity.PersonalDataActivity;
import tts.project.livek.ui.activity.WangHongRenZhengActivity;
import tts.project.livek.ui.activity.WithDrawActivity;
import tts.project.livek.utils.Constant;
import tts.project.livek.utils.Logger;
import tts.project.livek.utils.SPUtils;
import tts.project.livek.utils.SpSingleInstance;


/**
 * A simple {@link Fragment} subclass.
 * Use the {@link MeFragment#newInstance} factory method to
 * create an instance of this fragment.
 */
public class MeFragment extends BaseFragment implements View.OnClickListener {
    // TODO: Rename parameter arguments, choose names that match
    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
    private static final String ARG_PARAM1 = "param1";
    private static final String ARG_PARAM2 = "param2";
    public static final int DATA = 0;

    // TODO: Rename and change types of parameters
    private String mParam1;
    private String mParam2;
    private UserBean userBean;
    private UserCenterBean userCenterBean;
    private CircleImageView icon;
    private TextView nickname;
    private TextView count_piao;
    private TextView count_dimend;
    private TextView details;
    private RelativeLayout renzheng;
    private TextView u_coid_count;
    private TextView state;


    public MeFragment() {
        // Required empty public constructor
    }

    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment MeFragment.
     */
    // TODO: Rename and change types and number of parameters
    public static MeFragment newInstance(String param1, String param2) {
        MeFragment fragment = new MeFragment();
        Bundle args = new Bundle();
        args.putString(ARG_PARAM1, param1);
        args.putString(ARG_PARAM2, param2);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getArguments() != null) {
            mParam1 = getArguments().getString(ARG_PARAM1);
            mParam2 = getArguments().getString(ARG_PARAM2);
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        return setContentView(R.layout.fragment_me, inflater, container, savedInstanceState);
    }

    @Override
    public View initView(LayoutInflater inflater, ViewGroup container) {
        return  inflater.inflate(R.layout.fragment_me,null);
    }

    @Override
    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
        super.onActivityCreated(savedInstanceState);
        findallview();
        initData();
    }

    private void findallview() {
        rootView.findViewById(R.id.me_Fragment_my_video).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startActivity(new Intent(getContext(), MyVideoActivity.class));

            }
        });
        rootView.findViewById(R.id.rl_setting).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {


                final AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
                builder.setPositiveButton("确定", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        SPUtils.saveObJ1(getContext(),Constant.USER_BEAN,null);
                        startActivity(new Intent(getContext(), LoginActivity2.class));
                    }
                });

                builder.setNegativeButton("取消", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        dialog.cancel();
                    }
                });

                builder.setTitle("确定要退出登录？");
                builder.show();

            }
        });
        renzheng = (RelativeLayout) rootView.findViewById(R.id.me_fragment_renzheng);
        u_coid_count = (TextView) rootView.findViewById(R.id.u_coid_count);
        state = (TextView) rootView.findViewById(R.id.state);
        TextView details = (TextView)rootView.findViewById(R.id.me_fragment_details);
        icon = (CircleImageView) rootView.findViewById(R.id.me_fragment_icon);
        nickname = (TextView) rootView.findViewById(R.id.me_fragment_nickname);
        count_piao = (TextView) rootView.findViewById(R.id.me_fragment_count_piao);
        details = (TextView) rootView.findViewById(R.id.me_fragment_details);
        count_dimend = (TextView) rootView.findViewById(R.id.me_fragment_dimend_count);
        RelativeLayout viewById = (RelativeLayout) rootView.findViewById(R.id.me_fragment_rl_my_dimends);
        viewById.setOnClickListener(this);
        TextView guanzhu= (TextView) rootView.findViewById(R.id.me_fragment_my_guanzhu);
        TextView fans= (TextView) rootView.findViewById(R.id.me_fragment_my_fans);
        guanzhu.setOnClickListener(this);
        fans.setOnClickListener(this);
        RelativeLayout rl_u = (RelativeLayout) rootView.findViewById(R.id.me_fragment_rl_my_u);
        rootView.findViewById(R.id.me_fragment_renzheng).setOnClickListener(this);
        rootView.findViewById(R.id.me_fragment_rl_my_u).setOnClickListener(this);
        details.setOnClickListener(this);
        rl_u.setOnClickListener(this);
    }
    /**
     * 弹出提示框
     */
    private void showAlertDialog() {
        new AlertView("确定退出登录？", null, null, null, new String[]{"取消", "确定"}, getContext(), AlertView.Style.Alert, new AlertView.OnItemClickListener() {
            @Override
            public void onItemClick(Object o, int position) {
                if (position == 0) {

                }else{

                }
            }
        }).setCancelable(true)
                .show();
    }

    @Override
    public void onResume() {
        startRequestData(DATA);
        super.onResume();
    }

    private void initData() {
        userBean = SpSingleInstance.getSpSingleInstance().getUserBean(getContext());
    }

    @Override
    protected void startRequestData(int index) {
        super.startRequestData(index);
        ArrayMap<String, String> map = new ArrayMap<>();
        switch (index) {
            case DATA:
                map.put("uid", SpSingleInstance.getSpSingleInstance().getUserBean(getContext()).getUser_id());
                map.put("token", SpSingleInstance.getSpSingleInstance().getUserBean(getContext()).getToken());
                getDataWithPost(DATA, Host.hostUrl + "&c=User&a=user_center", map);
                break;
        }
    }

    @Override
    protected void doSuccess(int index, String response) {
        super.doSuccess(index, response);
        switch (index) {
            case DATA:
                userCenterBean = new Gson().fromJson(response, UserCenterBean.class);
                filldata(userCenterBean);
                Logger.e(response);
                break;
        }
    }

    private void filldata(UserCenterBean userCenterBean) {
        u_coid_count.setText(userCenterBean.getU_money());
        count_dimend.setText(userCenterBean.getMoney());
        if (userCenterBean.getImg() != null) {
            SPUtils.saveString(getContext(),"img",userCenterBean.getImg());
            Glide.with(getContext()).load(userCenterBean.getImg()).diskCacheStrategy(DiskCacheStrategy.ALL).into(icon);
        }
        nickname.setText(userCenterBean.getUsername() == null ? "未设置" : userCenterBean.getUsername());
        count_piao.setText(userCenterBean.getId() == null ? "未设置" : "幽秘号: " + userCenterBean.getId());
//        count_dimend.setText(usey);
        switch (userCenterBean.getIs_authen()) {
            case "-1":
                state.setText("去认证");
                break;
            case "1":
                state.setText("认证中");
                break;
            case "2":
                renzheng.setVisibility(View.GONE);
                break;
            case "3":
                state.setText("去认证");
                break;
        }
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.me_fragment_my_guanzhu:
                Intent intent4 = new Intent(getContext(), AttentionActivity.class);
                startActivity(intent4);
                break;
            case R.id.me_fragment_my_fans:
                Intent intent5 = new Intent(getContext(), MyFansActivity.class);
                startActivity(intent5);
                break;
            case R.id.me_fragment_rl_my_dimends:
                Intent intent3 = new Intent(getContext(), ChargeActivity.class);
                if (userCenterBean!=null){
                    intent3.putExtra(Constant.DIMEND_COUNT,userCenterBean.getMoney());
                }
                startActivity(intent3);
                break;
            case R.id.me_fragment_rl_my_u:
                Intent intent2 = new Intent(getContext(), WithDrawActivity.class);
                intent2.putExtra(Constant.U_COUNT,userCenterBean.getU_money());
                startActivity(intent2);
                break;
            case R.id.me_fragment_details:
                Intent intent = new Intent(getContext(), PersonalDataActivity.class);
                intent.putExtra(Constant.USERCENTERBEAN, userCenterBean);
                startActivity(intent);
                break;
            case R.id.me_fragment_renzheng:
                final Intent intent1 = new Intent(getContext(), WangHongRenZhengActivity.class);
                AlertDialog.Builder dialog = new AlertDialog.Builder((MainActivity) getContext());
                //判断当前的状态，  is_authen": "-1"          //-1：未提交   1：认证中   2：成功   3：失败
                switch (userCenterBean.getIs_authen()) {
                    case "-1":
                        renzheng.setVisibility(View.VISIBLE);
                        intent1.putExtra(Constant.ISADD, true);
                        startActivity(intent1);
                        break;
                    case "1":
                        renzheng.setVisibility(View.VISIBLE);
                        dialog.setTitle("您已申请过网红，平台正在审核中");
                        dialog.setMessage("目前只可以对资料进行修改");
                        dialog.setNegativeButton("取消", new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                dialog.dismiss();
                            }
                        });
                        dialog.setPositiveButton("去修改", new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                intent1.putExtra(Constant.ISADD, false);
                                startActivity(intent1);
                            }
                        });
                        dialog.show();
                        break;
                    case "2":
                        renzheng.setVisibility(View.GONE);
                        break;
                    case "3":
                        renzheng.setVisibility(View.VISIBLE);
                        dialog.setTitle("您申请的网红认证未通过");
                        dialog.setNegativeButton("取消", new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                dialog.dismiss();
                            }
                        });
                        dialog.setPositiveButton("重新填写", new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialog, int which) {
                                intent1.putExtra(Constant.ISADD, false);
                                startActivity(intent1);
                            }
                        });
                        dialog.show();
                        break;
                }
                    break;

                }


        }
    }
